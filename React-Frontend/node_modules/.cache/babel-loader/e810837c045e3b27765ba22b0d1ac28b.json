{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\Sports Club\\\\arena\\\\React-Frontend\\\\src\\\\components\\\\interact.js\";\nimport React, { Component } from 'react';\nimport Header from './header';\nimport '../css/interact.css';\nimport Footer from './footer'; //import {Navbar,Nav} from 'react-bootstrap';\n\nimport moment from 'moment';\nimport ReactTimeslotCalendar from 'react-timeslot-calendar';\nimport Calendar from 'react-calendar';\nimport { Button } from 'react-bootstrap'; // class interact extends Component{\n//   state = {\n//     date: new Date(),\n//   }\n//   onChange = date => this.setState({ date });\n//   render() {\n//     return (\n//       <div>\n//         <Calendar\n//           onChange={this.onChange}\n//           value={this.state.date}\n//         />\n//         <button onClick={()=>{console.log(this.date);}}></button>\n//       </div>\n//     );\n//   }\n// }\n// bookTimeSlot = event => {\n//   // let localUser = JSON.parse(localStorage.getItem(\"credentials\"));\n//   let bookedTennisCourtTable = {\n//     UserId: localUser.userId,\n//     TennisCourtId: this.props.tennisCourtId,\n//     StartTime: startDateClone,\n//     EndTime: endDateClone,\n//     Partners: \"\"\n//   }\n//   let bookedTennisCourtIdClone = 0;\n//   if (startDateClone) {\n//     let alertCourtDate = moment(startDateClone).format('llll');\n//     this.setState({\n//       startDate: alertCourtDate\n//     })\n//     APIManager.bookTennisCourt(bookedTennisCourtTable).then(court => {\n//       bookedTennisCourtIdClone = court.id;\n//       this.setState({\n//         bookedTennisCourtId: bookedTennisCourtIdClone\n//       })\n//     });\n//   }\n\nclass interact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.book = event => {\n      let startDateClone = \"\";\n      let endDateClone = \"\";\n      let selectedStartDateInput = document.getElementsByName(\"tsc-startDate\");\n\n      for (let i = 0; i < selectedStartDateInput.length; i++) {\n        let selectedStartDate = selectedStartDateInput[i].value;\n        let sliceSelectedStartDate = selectedStartDate.slice(0, 19);\n        let fullStartDate = sliceSelectedStartDate.slice(0, 10);\n        let fullStartTime = sliceSelectedStartDate.slice(11, 19);\n        startDateClone = `${fullStartDate} ${fullStartTime}`; // 2018-11-02 14:00:00\n      }\n\n      let selectedEndDateInput = document.getElementsByName(\"tsc-endDate\");\n\n      for (let i = 0; i < selectedEndDateInput.length; i++) {\n        let selectedEndDate = selectedEndDateInput[i].value;\n        let sliceSelectedEndDate = selectedEndDate.slice(0, 19);\n        let fullEndDate = sliceSelectedEndDate.slice(0, 10);\n        let fullEndTime = sliceSelectedEndDate.slice(11, 19);\n        endDateClone = `${fullEndDate} ${fullEndTime}`;\n      }\n\n      console.log(startDateClone);\n      console.log(endDateClone);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactTimeslotCalendar, {\n      initialDate: moment().format(),\n      timeslots: [['5', '6'], // 1:00 AM - 2:00 AM\n      ['6', '7'], // 2:00 AM - 3:00 AM\n      ['7', '8'], // 4:00 AM - 6:00 AM\n      ['18', '19'], ['19', '20'], ['20', '21']],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default interact;","map":{"version":3,"sources":["E:/reactjs/Sports Club/arena/React-Frontend/src/components/interact.js"],"names":["React","Component","Header","Footer","moment","ReactTimeslotCalendar","Calendar","Button","interact","book","event","startDateClone","endDateClone","selectedStartDateInput","document","getElementsByName","i","length","selectedStartDate","value","sliceSelectedStartDate","slice","fullStartDate","fullStartTime","selectedEndDateInput","selectedEndDate","sliceSelectedEndDate","fullEndDate","fullEndTime","console","log","render","format"],"mappings":"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","sourcesContent":["import React ,{ Component }  from 'react';\r\nimport Header from './header';\r\nimport '../css/interact.css';\r\nimport Footer from './footer';\r\n//import {Navbar,Nav} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport ReactTimeslotCalendar from 'react-timeslot-calendar';\r\nimport Calendar from 'react-calendar';\r\nimport {Button} from 'react-bootstrap'; \r\n\r\n// class interact extends Component{\r\n \r\n//   state = {\r\n//     date: new Date(),\r\n//   }\r\n \r\n//   onChange = date => this.setState({ date });\r\n \r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Calendar\r\n//           onChange={this.onChange}\r\n//           value={this.state.date}\r\n//         />\r\n//         <button onClick={()=>{console.log(this.date);}}></button>\r\n//       </div>\r\n\r\n//     );\r\n//   }\r\n    \r\n  \r\n// }\r\n\r\n\r\n// bookTimeSlot = event => {\r\n  \r\n//   // let localUser = JSON.parse(localStorage.getItem(\"credentials\"));\r\n  \r\n\r\n//   let bookedTennisCourtTable = {\r\n//     UserId: localUser.userId,\r\n//     TennisCourtId: this.props.tennisCourtId,\r\n//     StartTime: startDateClone,\r\n//     EndTime: endDateClone,\r\n//     Partners: \"\"\r\n//   }\r\n\r\n//   let bookedTennisCourtIdClone = 0;\r\n\r\n//   if (startDateClone) {\r\n//     let alertCourtDate = moment(startDateClone).format('llll');\r\n\r\n//     this.setState({\r\n//       startDate: alertCourtDate\r\n//     })\r\n\r\n//     APIManager.bookTennisCourt(bookedTennisCourtTable).then(court => {\r\n//       bookedTennisCourtIdClone = court.id;\r\n//       this.setState({\r\n//         bookedTennisCourtId: bookedTennisCourtIdClone\r\n//       })\r\n//     });\r\n//   }\r\n\r\nclass interact extends Component{\r\n  // let onSelectTimeslot=(allTimeslots, lastSelectedTimeslot)=>{\r\n  //   console.log(lastSelectedTimeslot.startDate);\r\n  // }\r\n  book = event =>{\r\n    let startDateClone = \"\";\r\n    let endDateClone = \"\";\r\n\r\n    let selectedStartDateInput = document.getElementsByName(\"tsc-startDate\");\r\n\r\n    for (let i = 0; i < selectedStartDateInput.length; i++) {\r\n      let selectedStartDate = selectedStartDateInput[i].value;\r\n      let sliceSelectedStartDate = selectedStartDate.slice(0, 19);\r\n      let fullStartDate = sliceSelectedStartDate.slice(0, 10);\r\n      let fullStartTime = sliceSelectedStartDate.slice(11, 19);\r\n\r\n      startDateClone = `${fullStartDate} ${fullStartTime}`; // 2018-11-02 14:00:00\r\n    }\r\n\r\n    let selectedEndDateInput = document.getElementsByName(\"tsc-endDate\");\r\n\r\n    for (let i = 0; i < selectedEndDateInput.length; i++) {\r\n      let selectedEndDate = selectedEndDateInput[i].value;\r\n      let sliceSelectedEndDate = selectedEndDate.slice(0, 19);\r\n      let fullEndDate = sliceSelectedEndDate.slice(0, 10);\r\n      let fullEndTime = sliceSelectedEndDate.slice(11, 19);\r\n\r\n      endDateClone = `${fullEndDate} ${fullEndTime}`;\r\n    }\r\n  \r\n    console.log(startDateClone);\r\n    console.log(endDateClone);\r\n  }\r\n\r\n  render(){\r\n   \r\n\r\n    return (\r\n      <div>\r\n      <ReactTimeslotCalendar\r\n        initialDate={moment().format()}\r\n        timeslots= {[\r\n          ['5', '6'], // 1:00 AM - 2:00 AM\r\n          ['6', '7'], // 2:00 AM - 3:00 AM\r\n          ['7', '8'], // 4:00 AM - 6:00 AM\r\n          ['18', '19'],\r\n          ['19', '20'],\r\n          ['20', '21']\r\n      ]}\r\n      />\r\n      <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default interact;"]},"metadata":{},"sourceType":"module"}